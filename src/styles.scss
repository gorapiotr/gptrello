// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$gptrello-primary: mat-palette($mat-indigo);
$gptrello-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$gptrello-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$gptrello-theme: mat-light-theme($gptrello-primary, $gptrello-accent, $gptrello-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($gptrello-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.board {
  // Flexbox styling that defines the direction in which the content is flowing.
  // Also makes it easier to stretch the lists to the height of the screen later on.
  display: flex;
  flex-direction: row;

  // Ensure that the board covers the viewport and add some padding to make it look better.
  width: 100%;
  height: 100%;
  padding: 8px;
  box-sizing: border-box;

  // Only allow horizontal scrolling.
  overflow-x: auto;
  overflow-y: hidden;
}

.card-list {
  // Stretch the element to the height of the board and make it scrollable.
  height: 100%;
  width: 320px;
  overflow: auto;
  box-sizing: border-box;
  margin-right: 8px;
  flex-shrink: 0;

  // Some extra styling to make the card list look better.
  background: rgba(0, 0, 0, 0.03);
  border-radius: 4px;
  padding: 8px;
}

.card-list {
  // Makes it possible for the `card-list-content ` to take up the remaining space.
  display: flex;
  flex-direction: column;

  h2 {
    // Extra spacing to make things look better.
    margin-bottom: 5px;
  }

  button {
    // The flex-shrink prevents the button from shrinking if the list content becomes too large.
    flex-shrink: 0;
    margin-top: 10px;
  }
}

.card-list-content {
  // Make the list scrollable and stretch it to take up the available height.
  overflow: auto;
  flex-grow: 1;
}

// If items are being reordered through dragging, all other elements should
// reorder smoothly. Also if an item is being dropped, it should animate
// into its target position.
.cdk-drag-animating, .cdk-drop-list-dragging .cdk-drag {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

// Hides the placeholder if an element is being dragged.
.cdk-drag-placeholder {
  opacity: 0;
}
